@use 'sass:math';

.measureSuccess-wrapper {
	width: 100%;
	display: flex;
	flex-direction: column;
	gap: 3rem;

	.lighthouse-wrapper {
		width: 100%;
		height: 100%;
		position: relative;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		align-items: center;
		justify-content: center;
		padding: 3rem 0;
		opacity: 0;
		transition: opacity 0.5s ease-in-out, transform 0.5s;
		transform: translateY(25%);

		&.animate {
			opacity: 1;
			transform: translateY(0);
		}

		.scores {
			display: flex;
			gap: 3rem;

			.score-box {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 1.5rem;
				color: hsl(150, 100%, 40%);
				transition: color 0.3s ease-in-out;

				@media (hover: hover) and (pointer: fine) {
					&:hover {
						color: hsl(150, 100%, 50%);

						.score {
							border-color: hsl(150, 100%, 50%);
							box-shadow: 0 0 1rem rgba(0, 204, 102, 0.45),
								0 0 2rem rgba(0, 204, 102, 0.45);
							transform: scale(1.05);
						}
					}
				}

				.score {
					will-change: transform;
					display: flex;
					align-items: center;
					justify-content: center;
					height: 12rem;
					aspect-ratio: 1;
					border: 0.75rem solid hsl(150, 100%, 40%);
					border-radius: 50%;
					font-family: monospace;
					font-size: 2.5rem;
					background-color: rgba(0, 204, 102, 0.15);
					backdrop-filter: blur(10px);
					box-shadow: 0 0 1rem rgba(0, 204, 102, 0.25),
						0 0 2rem rgba(0, 204, 102, 0.25);
					transition: border 0.3s ease-in-out, box-shadow 0.3s ease-in-out,
						transform 0.3s ease-in-out;
					// background-color: rgb(30, 51, 40);
				}

				.label {
					font-family: system-ui;
					font-size: 2rem;
					font-weight: 500;
					color: hsl(0, 0%, 96%);
					text-align: center;
				}
			}
		}

		.pyro {
			position: absolute;
			top: 0;
			left: 0;

			height: 100%;
			width: 100%;
			pointer-events: none;

			$particles: 35;
			$width: 300;
			$height: 300;
			$widthMobile: 150;
			$heightMobile: 150;

			// Create the explosion for desktop...
			$box-shadow: ();
			$box-shadow2: ();

			@media (prefers-reduced-motion: reduce) {
				.pyro .before,
				.pyro .after {
					animation: none !important;
				}
			}

			@for $i from 0 through $particles {
				$box-shadow: $box-shadow,
					math.random($width) -
						math.div($width, 2) +
						px
						math.random($height) -
						math.div($height, 1.2) +
						px
						hsl(math.random(360), 100%, 50%);
				$box-shadow2: $box-shadow2, 0 0 #fff;
			}

			// Create the explosion for mobile...
			$box-shadow-mobile: ();
			$box-shadow2-mobile: ();

			@for $i from 0 through $particles {
				$box-shadow-mobile: $box-shadow-mobile,
					math.random($widthMobile) -
						math.div($widthMobile, 2) +
						px
						math.random($heightMobile) -
						math.div($heightMobile, 1.2) +
						px
						hsl(math.random(360), 100%, 50%);
				$box-shadow2-mobile: $box-shadow2-mobile, 0 0 #fff;
			}

			@mixin keyframes($animationName) {
				@keyframes #{$animationName} {
					@content;
				}
			}

			.before,
			.after {
				position: absolute;
				width: 7px;
				height: 7px;
				border-radius: 50%;
				box-shadow: $box-shadow2;
				animation: 1s bang ease-out infinite backwards,
					1s gravity ease-in infinite backwards,
					5s position linear infinite backwards;
			}

			@media screen and (max-width: 550px) and (orientation: portrait),
				screen and (max-height: 550px) and (orientation: landscape) {
				.before,
				.after {
					width: 5px;
					height: 5px;
					box-shadow: $box-shadow2-mobile;
					animation: 1s bang-mobile ease-out infinite backwards,
						1s gravity-mobile ease-in infinite backwards,
						5s position linear infinite backwards;
				}
			}

			.after {
				animation-delay: 1.25s, 1.25s, 1.25s;
				animation-duration: 1.25s, 1.25s, 6.25s;
				animation-fill-mode: backwards;
			}

			@include keyframes(bang) {
				to {
					box-shadow: $box-shadow;
				}
			}

			@include keyframes(gravity) {
				to {
					transform: translateY(200px);
					opacity: 0;
				}
			}

			@include keyframes(bang-mobile) {
				to {
					box-shadow: $box-shadow-mobile;
				}
			}

			@include keyframes(gravity-mobile) {
				to {
					transform: translateY(100px);
					opacity: 0;
				}
			}

			@include keyframes(position) {
				0%,
				19.9% {
					margin-top: 9%;
					margin-left: 48%;
				}
				20%,
				39.9% {
					margin-top: 3%;
					margin-left: 35%;
				}
				40%,
				59.9% {
					margin-top: 6%;
					margin-left: 65%;
				}
				60%,
				79.9% {
					margin-top: 10%;
					margin-left: 22%;
				}
				80%,
				99.9% {
					margin-top: 12%;
					margin-left: 77%;
				}
			}
		}

		.fireworks-toggle {
			display: flex;
			align-items: center;
			justify-content: center;
			gap: 0.5rem;

			input {
				height: 0.875rem;
				width: 0.875rem;
				accent-color: hsl(0, 100%, 50%);
				cursor: pointer;
			}

			label {
				display: flex;
				align-items: center;
				gap: 0.5rem;
				color: hsl(0, 100%, 100%);
				font-size: 0.875rem;
				cursor: pointer;
			}
		}
	}

	.definitions {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 3rem;

		.intro {
			width: 80%;
			font-size: 2.25rem;
			line-height: 1.125;
			color: var(--gray1);
			text-align: center;
			text-wrap: pretty;
			opacity: 0;
			transform: translateY(100%);
			transition: opacity 0.5s ease-in-out, transform 0.5s;
			text-shadow: 0.5rem 0.5rem 1rem black, 0.5rem 0.5rem 2rem black,
				0.5rem 0.5rem 3rem black;

			&.visible {
				opacity: 1;
				transform: translateY(0);
			}
		}

		.definitions-grid {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(18rem, 1fr));
			grid-auto-rows: auto;
			gap: 2rem 3rem;
			justify-content: center;
			width: 100%;
			max-width: 1200px;
			margin: 1.25rem auto;

			.definition {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 1rem;
				padding: 1.25rem 1.75rem;
				border: 2px solid var(--gray2);
				line-height: 1.125;
				background-image: linear-gradient(
					135deg,
					hsla(0, 0%, 30%, 0.45),
					hsla(0, 0%, 10%, 0.45) 75%
				);
				backdrop-filter: blur(10px);
				border-radius: 0.75rem;
				transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out,
					opacity 0.5s ease-in-out, transform 0.3s ease-in-out;
				box-shadow: 0.5rem 0.5rem 1rem black, 0 0 1rem hsla(0, 100%, 100%, 0),
					0 0 2rem hsla(0, 100%, 100%, 0);

				opacity: 0;
				transform: translateY(50%);

				&.visible {
					opacity: 1;
					transform: translateY(0);
				}

				@media (hover: hover) and (pointer: fine) {
					&:hover {
						border-color: var(--gray1);
						box-shadow: 0.5rem 0.5rem 1rem black,
							0.5rem 0.5rem 2rem hsla(180, 100%, 10%, 0.5),
							0 0 4rem hsla(180, 100%, 10%, 0.5);
						transform: translateY(-0.5rem);

						.icon-wrapper {
							.icon {
								filter: drop-shadow(0 0 1.5rem aqua);
								transform: scale(1.1);
								color: aqua;
							}
						}
					}
				}

				.icon-wrapper {
					.icon {
						font-size: 3.5rem;
						color: var(--gray1);
						transition: filter 0.3s ease-in-out, transform 0.3s ease-in-out,
							color 0.3s ease-in-out;
					}
				}
			}
		}

		.definitions-list {
			width: 100%;
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: 1rem;

			.definition {
				width: 90%;
				display: flex;
				flex-direction: column;
				// align-items: center;
				gap: 0.25rem;
				opacity: 0;
				transform: translateY(100%);
				transition: opacity 0.5s ease-in-out, transform 0.5s;

				&.visible {
					opacity: 1;
					transform: translateY(0);
				}

				dt {
					font-size: 2rem;
					color: var(--gray1);
					// text-decoration: underline;
					// text-underline-offset: 0.25rem;
					text-shadow: 0.5rem 0.5rem 1rem black, 0.5rem 0.5rem 2rem black,
						0.5rem 0.5rem 3rem black;
				}

				dd {
					width: 100%;
					font-size: 1.125rem;
					color: var(--gray2) !important;
					line-height: 1.25;
					text-shadow: 0.5rem 0.5rem 1rem black, 0.5rem 0.5rem 2rem black,
						0.5rem 0.5rem 3rem black;
				}
			}
		}

		// .definition {
		// 	width: 90%;
		// 	display: flex;
		// 	flex-direction: column;
		// 	align-items: center;
		// 	gap: 1rem;
		// 	opacity: 0;
		// 	transform: translateY(100%);
		// 	transition: opacity 0.5s ease-in-out, transform 0.5s;

		// 	&.visible {
		// 		opacity: 1;
		// 		transform: translateY(0);
		// 	}

		// 	dt {
		// 		font-size: 2rem;
		// 		color: var(--gray1);
		// 		text-decoration: underline;
		// 		text-underline-offset: 0.25rem;
		// 		text-shadow: 0.5rem 0.5rem 1rem black, 0.5rem 0.5rem 2rem black,
		// 			0.5rem 0.5rem 3rem black;
		// 	}

		// 	dd {
		// 		width: 75%;
		// 		font-size: 1.125rem;
		// 		color: var(--gray2) !important;
		// 		line-height: 1.25;
		// 		text-shadow: 0.5rem 0.5rem 1rem black, 0.5rem 0.5rem 2rem black,
		// 			0.5rem 0.5rem 3rem black;
		// 	}
		// }

		.summary {
			font-size: var(--descriptor);
			color: var(--gray1);
			line-height: 1.25;

			opacity: 0;
			transform: translateY(100%);
			transition: opacity 0.5s ease-in-out, transform 0.5s;
			text-shadow: 0.5rem 0.5rem 1rem black, 0.5rem 0.5rem 2rem black,
				0.5rem 0.5rem 3rem black;

			&.visible {
				opacity: 1;
				transform: translateY(0);
			}
		}
	}

	@media screen and (max-width: 1200px) and (orientation: portrait),
		screen and (max-height: 950px) and (orientation: landscape) {
		gap: 2rem;
		margin-bottom: 2rem;

		@media screen and (max-width: 850px) and (orientation: portrait) {
			gap: 1rem;
		}

		.lighthouse-wrapper {
			padding: 1rem 0;

			.scores {
				gap: 1.5rem;

				@media screen and (max-width: 850px) and (orientation: portrait) {
					gap: 1rem;
				}

				.score-box {
					gap: 1rem;

					.score {
						height: 10rem;
						border-width: 0.5rem;
						font-size: 2.5rem;

						@media screen and (max-width: 750px) and (orientation: portrait) {
							height: 8rem;
							font-size: 2.25rem;
						}

						@media screen and (max-width: 550px) and (orientation: portrait) {
							height: calc((100vw - 5rem) / 4);
							border-width: 5px;
							font-size: 1.5rem;
						}
					}

					.label {
						font-size: 1.5rem;

						@media screen and (max-width: 550px) and (orientation: portrait) {
							font-size: 0.875rem;
						}
					}
				}

				@media screen and (max-height: 550px) and (orientation: landscape) {
					gap: 1.5rem;

					.score-box {
						.score {
							height: 9rem;
						}
					}
				}

				@media screen and (max-height: 400px) and (orientation: landscape) {
					.score-box {
						.score {
							height: 8rem;
							border-width: 0.375rem;
						}
					}
				}
			}
		}

		.definitions {
			gap: 2rem;

			.intro {
				font-size: var(--descriptor);

				@media screen and (max-width: 550px) and (orientation: portrait) {
					width: 90%;
					font-size: 1.125rem;
				}
			}

			.definitions-grid {
				gap: 1.5rem 2rem;
			}

			.definition {
				width: 100%;
				gap: 1rem;
				transform: translateY(50%);

				dt {
					font-size: 1.75rem;
					color: var(--gray1);
					// text-decoration: underline;
					// text-underline-offset: 0.25rem;

					@media screen and (max-width: 550px) and (orientation: portrait) {
						font-size: 1.5rem !important;
					}
				}

				dd {
					width: 90%;
					font-size: 1.125rem;
					color: var(--gray2);
					text-wrap: pretty;

					@media screen and (max-height: 700px) and (orientation: landscape) {
						font-size: 1rem !important;
					}

					@media screen and (max-width: 550px) and (orientation: portrait) {
						font-size: 1rem !important;
					}
				}
			}

			.summary {
				font-size: var(--descriptor);
				transform: translateY(50%);

				@media screen and (max-width: 550px) and (orientation: portrait) {
					font-size: 1.125rem;
					text-align: center;
					width: 90%;
				}
			}
		}
	}
}
